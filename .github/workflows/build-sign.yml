name: Build, Sign, and Secure

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  id-token: write   # required for OIDC token (cosign, slsa)
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.digest.outputs.image-digest }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/secure-node-app:${{ github.sha }}
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker buildx build --push --platform linux/amd64,linux/arm64 -t $IMAGE .

      - name: Get image digest
        id: digest
        run: |
          DIGEST=$(docker buildx imagetools inspect $IMAGE --format '{{json .Manifest.Digest}}' | tr -d '"')
          echo "image-digest=ghcr.io/${{ github.repository }}/secure-node-app@$DIGEST" >> $GITHUB_OUTPUT

  sbom:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ${{ needs.build.outputs.image-digest }}
          format: spdx-json
          output-file: sbom.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json

  scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.build.outputs.image-digest }}
          format: table
          exit-code: 0

  slsa-provenance:
    needs: build
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ${{ needs.build.outputs.image-digest }}
